; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
extra_configs = 
	upload_config.ini

default_envs = lang_pl, lang_en, lang_ro, lang_hu, lang_en_32

[common]
build_flags_esp8266 = -Wl,-Teagle.flash.4m2m.ld
build_flags = 
	-D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
	-D BEARSSL_SSL_BASIC
	-D VTABLES_IN_DRAM
	-D HTTPCLIENT_1_1_COMPATIBLE=0
	-D DEBUG_ESP_OOM
board_build.f_cpu = 160000000L
board_build.f_flash = 40000000L
board_build.flash_mode = dio
lib_deps_esp8266 = 
	ESP8266HTTPClient
	ESP8266WebServer
	ESP8266WiFi
	ESP8266httpUpdate
	ESP8266mDNS
	akajes/AsyncPing(esp8266) @ ^1.1.0
	plerup/EspSoftwareSerial @ ^8.2.0
	maxgerhardt/ghostl @ ^1.0.1

lib_deps_external =
	https://github.com/nettigo/Adafruit_BME280_Library.git
	adafruit/Adafruit BMP085 Library @ ^1.2.1
	adafruit/Adafruit BMP280 Library @ ^2.4.0
	Adafruit Unified Sensor@1.1.2
	ArduinoJson@5.13.4
	DallasTemperature@3.8.0
	thingpulse/ESP8266 and ESP32 OLED driver for SSD1306 displays @ 4.4.1
	OneWire@2.3.7
	DNSServer
	SPI
	https://github.com/mikalhart/TinyGPSPlus.git#v0.95
	https://github.com/Sensirion/arduino-sps.git#cf56687f7a861ab1b124d0abc7a641e1b6ef6010
	Wire
	576@1.1.4
	https://github.com/pilotak/ClosedCube_SHT31D_Arduino.git
	claws/BH1750 @ ^1.3.0
extra_scripts = 
	platformio_script.py
	pre:generate_language_files.py
platform_version = espressif8266@4.2.1

[env]
lib_ldf_mode = chain+
monitor_speed = 115200
upload_speed = 1000000

[env:lang_en_32]
lang = en
platform = espressif32@6.4.0
framework = arduino
board = heltec_wifi_lora_32_V3
monitor_filters = esp32_exception_decoder
build_flags = ${common.build_flags} -DINTL_EN -DNAM_LORAWAN
lib_deps = ${common.lib_deps_external}
	plerup/EspSoftwareSerial@^8.0.1
	Ticker
	beegee-tokyo/SX126x-Arduino @ ^2.0.20
	https://github.com/ElectronicCats/CayenneLPP/#1.0.1
extra_scripts = ${common.extra_scripts}

[env:native]
platform = native
test_ignore = test_embedded

[env:lang_pl]
lang = pl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.f_flash = ${common.board_build.f_flash}
board_build.flash_mode = ${common.board_build.flash_mode}
build_flags = ${common.build_flags} ${common.build_flags_esp8266} -DINTL_PL -DNDEBUG
lib_deps = ${common.lib_deps_external}
	${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:wemos-boot]
lang = boot
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} ${common.build_flags_esp8266} -DINTL_EN -DBOOT_FW -DNDEBUG
lib_deps = ${common.lib_deps_external}
	${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:lang_en]
lang = en
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} ${common.build_flags_esp8266} -DINTL_EN
lib_deps = ${common.lib_deps_external}
	${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:lang_hu]
lang = hu
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} ${common.build_flags_esp8266} -DINTL_HU -DNDEBUG
lib_deps = ${common.lib_deps_external}
	${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:lang_ro]
lang = ro
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} ${common.build_flags_esp8266} -DINTL_RO -DNDEBUG
lib_deps = ${common.lib_deps_external}
	${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:d1_mini]
platform = espressif8266
board = d1_mini
framework = arduino

[env:d1_mini_pro]
lang = en
platform = ${common.platform_version}
framework = arduino
board = d1_mini_pro
board_build.f_cpu = ${common.board_build.f_cpu}
board_build.f_flash = 80000000L
board_build.flash_mode = qout
;debug - see: https://github.com/esp8266/Arduino/blob/master/boards.txt
build_flags = -Wl,-Teagle.flash.4m2m.ld
  -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH
  -D BEARSSL_SSL_BASIC
  #-D VTABLES_IN_DRAM
  #-D PIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48_SECHEAP_SHARED
  -D HTTPCLIENT_1_1_COMPATIBLE=0
  #-D DEBUG_ESP_OOM
  #-DNDEBUG
  #-DDEBUG_ESP_HTTP_CLIENT
  #-DNDEBUG
  #-DDEBUG_ESP_WIFI -DNDEBUG_ESP_OOM -DDEBUG_ESP_PORT=Serial
lib_deps = ${common.lib_deps_external}
  ${common.lib_deps_esp8266} 
extra_scripts = ${common.extra_scripts}